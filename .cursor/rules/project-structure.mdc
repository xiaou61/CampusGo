---
description:
globs:
alwaysApply: false
---
# CampusGo 项目结构指南

## 项目概述
CampusGo 是一个校园服务小程序，提供校园导航、信息查询等功能。

## 目录结构
```
CampusGo/
├── pages/                # 页面文件夹
│   ├── login/           # 登录页面
│   ├── home/            # 首页
│   ├── map/             # 地图页面
│   ├── school/          # 学校信息页面
│   ├── site/            # 站点页面
│   └── ai/              # AI助手页面
├── utils/               # 工具函数
│   ├── request.js       # 网络请求封装
│   ├── config.js        # 配置文件
│   └── page-behavior.js # 页面行为混入
├── images/              # 图片资源
├── data/                # 数据文件
├── libs/                # 第三方库
├── towxml/              # Towxml解析库
├── app.js              # 应用入口
├── app.json            # 应用配置
└── app.wxss            # 全局样式
```

## 编码规范

### 1. 页面结构
每个页面应包含以下文件：
- `page.js` - 页面逻辑
- `page.wxml` - 页面结构
- `page.wxss` - 页面样式
- `page.json` - 页面配置

### 2. 样式规范
- 使用 rpx 作为主要尺寸单位
- 颜色使用渐变色提升视觉效果
- 遵循 BEM 命名规范
- 深色模式适配
- 响应式设计

### 3. 组件规范
- 组件名使用小写字母，多个单词用连字符连接
- 组件样式使用 scoped 隔离
- 组件属性使用驼峰命名

### 4. 网络请求
- 统一使用 `utils/request.js` 中的请求方法
- 请求错误统一处理
- 支持请求拦截和响应拦截

### 5. 状态管理
- 页面数据统一在 data 中管理
- 复杂状态考虑使用全局状态管理
- 避免过度使用全局状态

### 6. 性能优化
- 合理使用分包加载
- 图片资源压缩
- 避免不必要的重渲染
- 使用缓存优化

### 7. 安全规范
- 敏感信息加密存储
- 用户数据脱敏处理
- 防止 XSS 攻击
- 请求签名验证

## 开发流程
1. 创建页面目录和文件
2. 编写页面结构和样式
3. 实现页面逻辑
4. 添加错误处理
5. 优化用户体验
6. 进行兼容性测试

## 注意事项
- 遵循微信小程序开发规范
- 保持代码风格统一
- 及时更新文档
- 做好版本控制
- 注意代码复用
